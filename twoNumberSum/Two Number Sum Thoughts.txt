Two Number Sum Thoughts

1) sort the array
2) if (any number + the smallest number) is greater than target, slice that off
3) Now using the range


[-1,0,1,2,3] 3 
[-1,0,1,2,3,4,5,6,7,8,9,11,14,18] 10

Ex1: len = 5
ceilling = 5, floor = 0 
arrray[floor:ceiling]
i = -1, needs = sum-have = 3 - -1 = 4
using i, new ceiling = heighest index where:
										while index > floor index, value <= 4
										if (index <== floor)
											DONE
										else 
											if floor + ceiling === target sum
												add both to return slice
												floor ++, ceiling --
											else
												floor ++

floorIndex = 0, value = -1, ceilingIndex = 4
	 -1 + 3 = 2 <= 4
	fail, upping floor
floor = 1, value = 0, ceiling = 4
	0 + 3 = 3 <= 3
	Success, adding & closing in both
floor = 2, value =1, ceiling = 3
	1 + 2 <= 3
	Success, adding & closing both
floor = 3, value =2, ceiling = 2
	FLOOR >= ceiling,
	DONE
	

return floors= [0,1]
return ceilings = [3,2]

